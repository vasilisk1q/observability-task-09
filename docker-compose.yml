version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./var/log/nginx:/var/log/nginx"              
        ports:
            - "8000:80"
              #- "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
            - "./etc/php/docker.conf:/usr/local/etc/php-fpm.d/docker.conf"
            - "./var/log/php:/var/log/"
            - "./etc/php/www.conf:/usr/local/etc/php-fpm.d/www.conf"
              #- "./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf"
    composer:
        image: "composer"
        volumes:
            - "./web/app:/app"
        command: install
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./etc/mysql/my.cnf:/etc/mysql/my.cnf"
            - "./data/db/mysql:/var/lib/mysql"

    promtail:
        image: grafana/promtail:2.9.2
        command: '-config.file=/etc/promtail/config.yml -log.level=debug'
        ports:
            - "9080:9080"
        volumes:
            - "./var/log/promtail:/var/log"
            - "./etc/promtail/config.yml:/etc/promtail/config.yml" 
            - "/opt/docker-nginx-php-mysql/var/log:/opt/docker-nginx-php-mysql/var/log"


    loki:
        image: grafana/loki:2.9.2
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml

    grafana:
        environment:
            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        entrypoint:
            - sh
            - -euc
            - |
              mkdir -p /etc/grafana/provisioning/datasources
              cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
              apiVersion: 1
              datasources:
              - name: Loki
                type: loki
                access: proxy
                orgId: 1
                url: http://loki:3100
                basicAuth: false
                isDefault: true
                version: 1
                editable: false
              EOF
              /run.sh
        image: grafana/grafana:latest
        ports:
            - "3000:3000"
